name: PHAROS Design System CI/CD

on:
  push:
    branches: [main]   # no PR trigger

env:
  FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
  FIGMA_FILE_KEY: ${{ secrets.FIGMA_FILE_KEY }}

jobs:
  extract-tokens:
    if: ${{ github.ref == 'refs/heads/main' && secrets.FIGMA_TOKEN && secrets.FIGMA_TOKEN != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - name: Extract PHAROS tokens from Figma
        run: npm run pharos-tokens
        env: { FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }} }
      - run: npm run pharos-css
      - uses: actions/upload-artifact@v4
        with:
          name: pharos-tokens
          path: |
            tokens/json/pharos-tokens.json
            tokens/css/pharos-design-system.css
          retention-days: 30

  build-components:
    if: ${{ needs.extract-tokens.result == 'success' }}
    needs: [extract-tokens]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - uses: actions/download-artifact@v4
        with: { name: pharos-tokens, path: . }
      - run: npm run pharos-css
      - uses: actions/upload-artifact@v4
        with:
          name: pharos-build
          path: |
            tokens/css/pharos-design-system.css
            tokens/json/pharos-tokens.json
          retention-days: 30

  test-design-system:
    if: ${{ needs.build-components.result == 'success' }}
    needs: [build-components]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - uses: actions/download-artifact@v4
        with: { name: pharos-build, path: . }
      - name: Sanity checks
        run: |
          test -f tokens/css/pharos-design-system.css
          test -f tokens/json/pharos-tokens.json

  deploy:
    if: ${{ github.ref == 'refs/heads/main' && needs.test-design-system.result == 'success' }}
    needs: [test-design-system]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Release step (optional) â€” add semantic-release or upload assets here."
